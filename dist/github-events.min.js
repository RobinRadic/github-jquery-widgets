/*
Github Profile jquery widget
http://robinradic.github.io/github-profile-widget

Copyright © 2014 Robin Radic - MIT License (http://radic.mit-license.org)

Copyright © 2014 Piotr Lewandowski
Original idea from https://github.com/piotrl/github-profile-widget
Complete javascript rewrite
Uses most of the original CSS
*/
!function(){var e=Handlebars.template,t=Handlebars.templates=Handlebars.templates||{};t["github.events"]=e({1:function(e,t,n,a){var s,i="function",o=t.helperMissing,l=this.escapeExpression,r=this.lambda;return'                <li data-event-id="'+l((s=null!=(s=t.id||(null!=e?e.id:e))?s:o,typeof s===i?s.call(e,{name:"id",hash:{},data:a}):s))+'" data-event-index="'+l(r(a&&a.key,e))+'">\n                    <div class="col1">\n                        <div class="cont">\n                            <div class="cont-col1">\n                                <div class="label label-sm label-'+l((s=null!=(s=t.iconColor||(null!=e?e.iconColor:e))?s:o,typeof s===i?s.call(e,{name:"iconColor",hash:{},data:a}):s))+'">\n                                    <i class="'+l((s=null!=(s=t.icon||(null!=e?e.icon:e))?s:o,typeof s===i?s.call(e,{name:"icon",hash:{},data:a}):s))+'"></i>\n                                </div>\n                            </div>\n                            <div class="cont-col2">\n                                <div class="desc">\n                                    '+l((s=null!=(s=t.text||(null!=e?e.text:e))?s:o,typeof s===i?s.call(e,{name:"text",hash:{},data:a}):s))+'\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col2">\n                        <div class="date">\n                            '+l((s=null!=(s=t.timeAgo||(null!=e?e.timeAgo:e))?s:o,typeof s===i?s.call(e,{name:"timeAgo",hash:{},data:a}):s))+"\n                        </div>\n                    </div>\n                </li>\n"},compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,a){var s,i,o="function",l=t.helperMissing,r=this.escapeExpression,u='<script type="text/x-handlebars-template">\n    <div class="portlet-body">\n        <div class="scroller" style="height: '+r((i=null!=(i=t.height||(null!=e?e.height:e))?i:l,typeof i===o?i.call(e,{name:"height",hash:{},data:a}):i))+'px;" data-always-visible="1" data-rail-visible="0">\n            <table>\n                <tr>\n                    <td>\n                        <div class="label label-sm label-success">\n                            <i class="fa fa-save"></i>\n                        </div>\n                    </td>\n                    <td>text</td>\n                    <td>date</td>\n                </tr>\n            </table>\n            <ul class="feeds github-events-widget">\n                <li>\n                    <div class="icon">\n                        <div class="label label-sm label-success">\n                            <i class="fa fa-save"></i>\n                        </div>\n                    </div>\n                    <div class="content">\n                        text\n                    </div>\n                    <div class="time">\n                        2 days\n                    </div>\n                </li>\n';return s=t.each.call(e,null!=e?e.events:e,{name:"each",hash:{},fn:this.program(1,a),inverse:this.noop,data:a}),null!=s&&(u+=s),u+"            </ul>\n        </div>\n    </div>\n</script>\n"},useData:!0})}(),function(e){e(jQuery,radic)}(function(e){e.widget("radic.githubEvents",e.radic.base,{version:"0.0.1",options:{username:"",template:"github.profile",className:"gh-profile-widget",spinner:!0,spinnerOptions:{},useSpinner:!0,max:60,output:{template:{title:"Recent events",height:300},events:{"default":{icon:"fa fa-info",text:"A github event has been triggered",iconColor:"default",link:!1},CommitCommentEvent:{icon:"fa fa-edit",text:"New comment on a commit"},CreateEvent:{icon:"fa fa-plus",iconColor:"success",text:function(){return""}},DeleteEvent:{icon:"fa fa-trash",iconColor:"default",text:"A branch or tag has been deleted"},DeploymentEvent:{icon:"fa fa-",iconColor:"default",text:""},DeploymentStatusEvent:{icon:"fa fa-",iconColor:"default",text:""},DownloadEvent:{icon:"fa fa-cloud-download",iconColor:"default",text:"A new download has been created"},FollowEvent:{icon:"fa fa-bullhorn",iconColor:"default",text:"A user started following me"},ForkEvent:{icon:"fa fa-code-fork",iconColor:"default",text:"A repository was forked"},ForkApplyEvent:{icon:"fa fa-code-fork",iconColor:"default",text:""},GistEvent:{icon:"fa fa-git",iconColor:"default",text:"A gist has been created or updated"},GollumEvent:{icon:"fa fa-git",iconColor:"default",text:"A wiki page has been created or updated"},IssueCommentEvent:{icon:"fa fa-comment-o",iconColor:"info",text:"An issue received a new comment"},IssuesEvent:{icon:"fa fa-exclamation-triangle",iconColor:"warning",text:function(){return""}},MemberEvent:{icon:"fa fa-sitemap",iconColor:"default",text:"A user is added as collaborator to a repository"},PageBuildEvent:{icon:"fa fa-file-o",iconColor:"default",text:""},PublicEvent:{icon:"fa fa-users",iconColor:"default",text:""},PullRequestEvent:{icon:"fa fa-sort-desc",iconColor:"default",text:""},PullRequestReviewCommentEvent:{icon:"fa fa-random",iconColor:"default",text:""},PushEvent:{icon:"fa fa-save",text:function(){return""},iconColor:"success"},ReleaseEvent:{icon:"fa fa-chain-broken",text:"A new release has been published",iconColor:"default"},StatusEvent:{icon:"fa fa-info",text:"The status of a Git commit has changed",iconColor:"default"},TeamAddEvent:{icon:"fa fa-plus",text:"A user has been added to the team",iconColor:"default"},WatchEvent:{icon:"fa fa-star",text:function(){return""},iconColor:"warning"}}}},_create:function(){var t=this;t.__cache={users:{},repos:{},events:{}},this.$widget=null,this.options.useSpinner===!0&&this.element.spin(),t.__events={},e.each(this.options.output.events,function(e,n){"default"!==e&&(t.__events[e]=_.merge(_.cloneDeep(t.options.output.events.default),n))}),t._fetchEventData(function(n){t.options.useSpinner===!0&&t.element.spin(!1);var a=e(t.options.selectors.template).html(),s=jQuery.template(a);e.extend(n,t.options.output.template);var i=s(n);t.element.append(i),t._bindAll()})},_bindAll:function(){var t=this;this.options.selectors,this.element.find("*[data-github-user]").popover({html:!0,trigger:"manual",container:"body",placement:"left",content:function(){return t._popoverUser(e(this).data("github-user"))}}).hover(function(t){t.preventDefault(),e(this).popover("toggle")}),this.element.find("*[data-github-commits]").each(function(){var n=e(this).data("github-commits");e(this).popover({html:!0,trigger:"manual",container:"body",placement:"right",content:function(){return t._getTemplate("github-events-commits",{event:t.__cache.events[n].raw})}}).hover(function(t){t.preventDefault(),e(this).popover("toggle")})}),this.element.find("*[data-github-issue]").tooltip({container:"body"})},_fetchEventData:function(e){var t=this;radic.github.users.events(this.options.username,0,this.options.max,function(n){for(var a=[],s=0;s<n.length;s++){var i=t._getProcessedEvent(n[s]);a.push(i),t.__cache.events[n[s].id]=i}e({events:a})})},_getProcessedEvent:function(e){var t=this,n=_.cloneDeep(t.__events[e.type]);return _.isFunction(n.text)&&(n.text=n.text.apply(this,[e])),n.id=e.id,n.raw=e,n.timeAgo=moment(e.created_at).fromNow(!0),n},_popoverUser:function(e){var t=this;_.isUndefined(t.__cache.users[e])&&(t.__cache.users[e]=JSON.parse(radic.github.syncRequest("/users/"+e)));var n=t.__cache.users[e];return t._getTemplate("github-events-user-popover",{user:n})},_getTemplate:function(t,n){var a=e('script[data-template-id="'+t+'"]').html(),s=jQuery.template(a),i={isset:function(e){return _.isUndefined(e)?!1:_.isString(e)?e.length>0:!0}};return s(e.extend(i,n))},_createModal:function(){},_showModal:function(e){switch(e){case"user":break;case"repository":break;case"push":radic.github.repos.commitsSha("RobinRadic","swiftapi","4853e862828bc697e2db839d7ad91fafb0844c1c",function(){})}},_init:function(){},_getCreateEventData:function(){},_destroy:function(){this.element.html("")},_setOptions:function(e){var t=e.value;delete e.value,this._super(e),this.options.value=this._constrainedValue(t),this._refreshValue()},_setOption:function(e,t){"max"===e&&(t=Math.max(this.min,t)),"disabled"===e&&this.element.toggleClass("ui-state-disabled",!!t).attr("aria-disabled",t),this._super(e,t)}})});